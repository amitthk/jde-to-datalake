const fs = require('fs');
const path = require('path');

console.log('Preparing production build...');

// Get port configuration from environment variables
const backendPort = process.env.REACT_APP_BACKEND_PORT || '9998';
const backendUrl = process.env.REACT_APP_BACKEND_URL || `http://localhost:${backendPort}`;

console.log('Production configuration:');
console.log(`  Backend Port: ${backendPort}`);
console.log(`  Backend URL: ${backendUrl}`);

// Source and destination paths
const prodApiFile = path.join(__dirname, '..', '..', 'deploy', 'prod', 'api.js');
const targetApiFile = path.join(__dirname, '..', 'src', 'config', 'api.js');

// Copy production API configuration
try {
  if (fs.existsSync(prodApiFile)) {
    // Read the production API file
    let apiContent = fs.readFileSync(prodApiFile, 'utf8');
    
    // Replace port placeholders with actual values
    apiContent = apiContent.replace(/process\.env\.REACT_APP_BACKEND_PORT \|\| '9998'/g, 
                                   `process.env.REACT_APP_BACKEND_PORT || '${backendPort}'`);
    
    // Write the modified content
    fs.writeFileSync(targetApiFile, apiContent);
    console.log('✓ Production API configuration copied and configured');
  } else {
    console.log('! Production API config not found, creating default...');
    
    // Create a default production API config
    const defaultConfig = `// Production API configuration
// Generated by prepare-prod.js

const PROD_BACKEND_PORT = process.env.REACT_APP_BACKEND_PORT || '${backendPort}';

const getApiBaseUrl = () => {
  if (typeof window !== 'undefined' && window.STICAL_CONFIG && window.STICAL_CONFIG.BACKEND_URL) {
    return window.STICAL_CONFIG.BACKEND_URL;
  }

  if (process.env.REACT_APP_BACKEND_URL) {
    return process.env.REACT_APP_BACKEND_URL;
  }

  if (typeof window !== 'undefined' && window.location) {
    const protocol = window.location.protocol;
    const hostname = window.location.hostname;
    
    if (hostname === 'localhost' || hostname === '127.0.0.1') {
      return \`\${protocol}//localhost:\${PROD_BACKEND_PORT}\`;
    }
    
    return \`\${protocol}//\${hostname}:\${PROD_BACKEND_PORT}\`;
  }
  
  return \`http://localhost:\${PROD_BACKEND_PORT}\`;
};

const API_BASE_URL = getApiBaseUrl();

console.log('Production API Base URL:', API_BASE_URL);
console.log('Backend Port:', PROD_BACKEND_PORT);

export { API_BASE_URL };`;

    fs.writeFileSync(targetApiFile, defaultConfig);
    console.log('✓ Default production API configuration created');
  }
} catch (error) {
  console.error('Error preparing API config:', error.message);
  process.exit(1);
}

console.log('Production preparation complete!');
